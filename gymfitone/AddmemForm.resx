<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>